<!DOCTYPE html>
<html lang="id">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Audio + Skor + Liga</title>
  <style>
    body { font-family: sans-serif; background: #f0f8ff; margin: 0; padding: 2rem; text-align: center; }
    h2 { margin-top: 2rem; }
    input, button {
      padding: 0.5rem 1rem;
      font-size: 1rem;
      margin: 0.5rem;
      border-radius: 0.5rem;
    }
    button {
      background: #007bff;
      color: white;
      border: none;
      cursor: pointer;
    }
    button:hover { background: #0056b3; }
    .section {
      margin-bottom: 2rem;
      background: white;
      padding: 1rem;
      border-radius: 1rem;
      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    }
    ul { list-style: none; padding: 0; }
    li { margin: 0.3rem 0; }
  </style>
</head>
<body>
  <div class="section">
    <h2>üéµ Audio Gift</h2>
    <button onclick="aktifkanAudio()">Aktifkan Audio</button>
    <div id="audioStatus"></div>
  <button onclick="selesaikanMatch()">Selesaikan Match Ini</button>
  </div>

  <div class="section">
    <h2>üèÜ Skor Match Aktif</h2>
    <div>
      <span>TIM A: <span id="scoreA">0</span></span>
      <button onclick="change('A', 1)">+1</button>
      <button onclick="change('A', -1)">-1</button>
    </div>
    <div>
      <span>TIM B: <span id="scoreB">0</span></span>
      <button onclick="change('B', 1)">+1</button>
      <button onclick="change('B', -1)">-1</button>
    </div>
    <button onclick="resetScores()">Reset Skor</button>
  <button onclick="selesaikanMatch()">Selesaikan Match Ini</button>
  </div>

  <div class="section">
    <h2>‚öΩ Tambah Tim Liga</h2>
    <input type="text" id="teamInput" placeholder="Nama Tim Baru" />
    <button onclick="tambahTim()">Tambah</button>
    <button onclick="resetTim()">Reset Tim & Jadwal</button>
    <ul id="daftarTim"></ul>
  <button onclick="selesaikanMatch()">Selesaikan Match Ini</button>
  </div>

  <div class="section">
    <h2>üìÖ Jadwal Pertandingan</h2>
    <button onclick="buatJadwal()">Buat Jadwal Otomatis</button>
    <ul id="daftarJadwal"></ul>
  </div>

  <audio id="audio1" src="audio/musik1.mp3"></audio>
  <audio id="audio2" src="audio/musik2.mp3"></audio>
  <audio id="audio3" src="audio/musik3.mp3"></audio>
  <audio id="audio4" src="audio/musik4.mp3"></audio>

  <script src="/socket.io/socket.io.js"></script>
  <script>
    const socket = io();
    let scoreA = 0, scoreB = 0;
    let timA = 'TIM A', timB = 'TIM B';

    const audioStatus = document.getElementById("audioStatus");
    const [audio1, audio2, audio3, audio4] = ['audio1', 'audio2', 'audio3', 'audio4'].map(id => document.getElementById(id));

    function aktifkanAudio() {
      [audio1, audio2, audio3, audio4].forEach(a => a.load());
      audio1.play().then(() => {
        audio1.pause();
        audioStatus.textContent = "Audio diaktifkan ‚úÖ";
      }).catch(() => {
        audioStatus.textContent = "‚ùå Gagal aktifkan audio. Coba klik ulang.";
      });
    }

    const protocol = location.protocol === 'https:' ? 'wss' : 'ws';
    const giftSocket = new WebSocket(`${protocol}://${location.host}`);

    giftSocket.onmessage = (event) => {
      const msg = JSON.parse(event.data);
      if (msg.type === 'gift' && msg.data) {
        const g = msg.data;
        const coin = g.diamondCount || 1;
        [audio1, audio2, audio3, audio4].forEach(a => { a.pause(); a.currentTime = 0; });
        if (coin <= 4) audio1.play();
        else if (coin <= 9) audio2.play();
        else if (coin <= 29) audio3.play();
        else audio4.play();
        audioStatus.textContent = `üéµ Memutar untuk gift ${coin} coin`;
      }
    };

    socket.on('matchAktif', (match) => {
      scoreA = match.scoreA || 0;
      scoreB = match.scoreB || 0;
      timA = match.teamA;
      timB = match.teamB;
      document.getElementById("scoreA").textContent = scoreA;
      document.getElementById("scoreB").textContent = scoreB;
    });

    function change(team, delta) {
      if (team === 'A') scoreA += delta;
      if (team === 'B') scoreB += delta;
      updateScoreServer();
      updateView();
    }

    function resetScores() {
      scoreA = 0;
      scoreB = 0;
      updateScoreServer();
      updateView();
    }

    function updateScoreServer() {
      fetch('/liga/update-skor', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ scoreA, scoreB })
      });
    }

    function updateView() {
      document.getElementById("scoreA").textContent = scoreA;
      document.getElementById("scoreB").textContent = scoreB;
    }

    function tambahTim() {
      const input = document.getElementById("teamInput");
      const name = input.value.trim();
      if (!name) return alert("Nama tim tidak boleh kosong");

      fetch('/liga/tim', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ name })
      })
      .then(res => res.json())
      .then(data => {
        if (data.teams) tampilkanDaftarTim(data.teams);
        else alert(data.message);
        input.value = "";
      });
    }

    function resetTim() {
      if (!confirm("Yakin ingin menghapus semua tim dan jadwal?")) return;
      fetch('/liga/reset', { method: 'POST' })
        .then(res => res.json())
        .then(data => {
          alert(data.message);
          ambilDaftarTim();
          ambilJadwal();
        });
    }

    function tampilkanDaftarTim(teams) {
      document.getElementById("daftarTim").innerHTML = teams.map(n => `<li>${n}</li>`).join('');
    }

    function ambilDaftarTim() {
      fetch('/liga/tim')
        .then(res => res.json())
        .then(data => tampilkanDaftarTim(data.teams));
    }

    function buatJadwal() {
      fetch('/liga/jadwal', { method: 'POST' })
        .then(res => res.json())
        .then(data => {
          if (data.matches) tampilkanJadwal(data.matches);
          else alert(data.message);
        });
    }

    function tampilkanJadwal(matches) {
      document.getElementById("daftarJadwal").innerHTML = matches.map((m, i) =>
        `<li>Match ${i + 1}: ${m.teamA} vs ${m.teamB} <button onclick="setMatchAktif(${i})">Aktifkan</button></li>`
      ).join('');
    }

    function setMatchAktif(index) {
      fetch('/liga/match-aktif', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ index })
      })
      .then(res => res.json())
      .then(data => {
        if (data.matchAktif) alert(`Match aktif: ${data.matchAktif.teamA} vs ${data.matchAktif.teamB}`);
      });
    }

    function ambilJadwal() {
      fetch('/liga/jadwal')
        .then(res => res.json())
        .then(data => tampilkanJadwal(data.matches));
    }

    ambilDaftarTim();
    ambilJadwal();
  </script>
</body>
</html>