<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Admin TikTok Gift</title>
  <style>
    body {
      font-family: sans-serif;
      background: linear-gradient(to bottom, #e0eafc, #cfdef3);
      margin: 0;
      padding: 2rem;
    }
    .container {
      max-width: 600px;
      margin: auto;
      background: white;
      padding: 2rem;
      border-radius: 1rem;
      box-shadow: 0 4px 20px rgba(0,0,0,0.1);
    }
    input, button {
      width: 100%;
      margin-bottom: 1rem;
      padding: 1rem;
      font-size: 1rem;
      border-radius: 0.5rem;
      border: 1px solid #ccc;
    }
    button {
      background: #007bff;
      color: white;
      border: none;
      cursor: pointer;
    }
    button:hover {
      background: #0056b3;
    }
    .status, .alert, .gift-info {
      font-weight: bold;
      margin-top: 1rem;
    }
    .gift-info {
      background: #f9f9f9;
      padding: 1rem;
      border-radius: 0.5rem;
    }
    .gift-info div {
      margin-bottom: 0.5rem;
    }
  </style>
</head>
<body>
  <div class="container">
    <h2>Masukkan Username TikTok</h2>
    <input type="text" id="username" placeholder="contoh: sobirinteknik" required>
    <button onclick="setUsername()">Koneksi</button>
    <button onclick="tampilkanKlasemen()">Tampilkan Klasemen</button>
    <button onclick="aktifkanAudio()">Aktifkan Audio</button>

    <div class="status" id="status"></div>
    <div class="alert" id="audioStatus"></div>
    <div class="gift-info" id="giftInfo" style="display:none;"></div>
  </div>

  <!-- Audio -->
  <audio id="audio1" src="audio/musik1.mp3"></audio>
  <audio id="audio2" src="audio/musik2.mp3"></audio>
  <audio id="audio3" src="audio/musik3.mp3"></audio>
  <audio id="audio4" src="audio/musik4.mp3"></audio>

  <script>
    let ws;
    const audioStatus = document.getElementById("audioStatus");
    const giftInfo = document.getElementById("giftInfo");
    const [audio1, audio2, audio3, audio4] = 
      ['audio1', 'audio2', 'audio3', 'audio4'].map(id => document.getElementById(id));

    function aktifkanAudio() {
      [audio1, audio2, audio3, audio4].forEach(a => a.load());
      audio1.play().then(() => {
        audio1.pause();
        audioStatus.textContent = "Audio diaktifkan ✅";
      }).catch(() => {
        audioStatus.textContent = "❌ Gagal aktifkan audio. Coba klik ulang.";
      });
    }

    function connectWS() {
      const protocol = location.protocol === 'https:' ? 'wss' : 'ws';
      ws = new WebSocket(`${protocol}://${location.host}`);

      ws.onmessage = (event) => {
        const msg = JSON.parse(event.data);
        if (msg.type === 'gift' && msg.data) {
          const g = msg.data;
          const coin = g.diamondCount || 1;

          [audio1, audio2, audio3, audio4].forEach(a => { a.pause(); a.currentTime = 0; });
          if (coin <= 4) audio1.play();
          else if (coin <= 9) audio2.play();
          else if (coin <= 29) audio3.play();
          else audio4.play();

          // Tampilkan data gift
          giftInfo.innerHTML = `
            <div>👤 <b>${g.nickname}</b> (${g.uniqueId})</div>
            <div>🎁 Gift: <b>${g.giftName}</b> (ID: ${g.gift_id})</div>
            <div>💎 Diamond: <b>${g.diamondCount}</b></div>
            <div>🔁 Repeat: ${g.repeat_count} ${g.repeat_end ? '(END)' : ''}</div>
            <div>🕒 Time: ${new Date(g.timestamp).toLocaleTimeString()}</div>
          `;
          giftInfo.style.display = "block";
        }
      };
    }

    function setUsername() {
      const username = document.getElementById('username').value;
      fetch('/set-username', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ username })
      })
      .then(res => res.json())
      .then(data => {
        document.getElementById('status').textContent = data.message;
      })
      .catch(() => {
        document.getElementById('status').textContent = 'Gagal menghubungkan.';
      });
    }

    function tampilkanKlasemen() {
      if (!ws || ws.readyState !== WebSocket.OPEN) {
        connectWS();
        ws.onopen = () => ws.send(JSON.stringify({ type: 'showKlasemen' }));
      } else {
        ws.send(JSON.stringify({ type: 'showKlasemen' }));
      }
    }

    connectWS();
  </script>
</body>
</html>
